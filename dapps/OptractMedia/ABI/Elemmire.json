{
  "contractName": "Elemmire",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_miningAddress",
          "type": "address"
        },
        {
          "name": "_idx",
          "type": "uint8"
        }
      ],
      "name": "setMining",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x25394391"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "managers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3d39c260"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "queryManager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x41e2ee29"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "queryMining",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x46604551"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5c975abb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAddr",
          "type": "address"
        },
        {
          "name": "_idx",
          "type": "uint8"
        }
      ],
      "name": "addManager",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb89e367f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mining",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd7dd41f2"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd3fc9864"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42966c68"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8456cb59"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x3f4ba83a"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e1576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce711610116578063a22cb465116100b4578063c87b56dd1161008e578063c87b56dd14610a4e578063d3fc986414610af5578063d7dd41f214610b98578063e985e9c514610c06576101e1565b8063a22cb465146108d2578063b88d4fde14610922578063b89e367f146109e5576101e1565b806370a08231116100f057806370a08231146107a35780638456cb59146107fb5780638da5cb5b1461080557806395d89b411461084f576101e1565b80634f6ccce7146106d15780635c975abb146107135780636352211e14610735576101e1565b80632f745c591161018357806341e2ee291161015d57806341e2ee291461055957806342842e0e146105c757806342966c68146106355780634660455114610663576101e1565b80632f745c591461047f5780633d39c260146104e15780633f4ba83a1461054f576101e1565b8063095ea7b3116101bf578063095ea7b31461033c57806318160ddd1461038a57806323b872dd146103a85780632539439114610416576101e1565b806301ffc9a7146101e657806306fdde031461024b578063081812fc146102ce575b600080fd5b610231600480360360208110156101fc57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c82565b604051808215151515815260200191505060405180910390f35b610253610ce9565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610293578082015181840152602081019050610278565b50505050905090810190601f1680156102c05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102fa600480360360208110156102e457600080fd5b8101908080359060200190929190505050610d8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103886004803603604081101561035257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e39565b005b6103926110d5565b6040518082815260200191505060405180910390f35b610414600480360360608110156103be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110e2565b005b6104656004803603604081101561042c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611380565b604051808215151515815260200191505060405180910390f35b6104cb6004803603604081101561049557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611404565b6040518082815260200191505060405180910390f35b61050d600480360360208110156104f757600080fd5b81019080803590602001909291905050506114b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105576114ea565b005b6105856004803603602081101561056f57600080fd5b810190808035906020019092919050505061157e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610633600480360360608110156105dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b8565b005b6106616004803603602081101561064b57600080fd5b81019080803590602001909291905050506115d9565b005b61068f6004803603602081101561067957600080fd5b8101908080359060200190929190505050611669565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106fd600480360360208110156106e757600080fd5b81019080803590602001909291905050506116a3565b6040518082815260200191505060405180910390f35b61071b6116d9565b604051808215151515815260200191505060405180910390f35b6107616004803603602081101561074b57600080fd5b81019080803590602001909291905050506116ec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107e5600480360360208110156107b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611765565b6040518082815260200191505060405180910390f35b6108036117b2565b005b61080d6117ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610857611825565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561089757808201518184015260208101905061087c565b50505050905090810190601f1680156108c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610920600480360360408110156108e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506118c7565b005b6109e36004803603608081101561093857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561099f57600080fd5b8201836020820111156109b157600080fd5b803590602001918460018302840111640100000000831117156109d357600080fd5b90919293919293905050506119c8565b005b610a34600480360360408110156109fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611a1f565b604051808215151515815260200191505060405180910390f35b610a7a60048036036020811015610a6457600080fd5b8101908080359060200190929190505050611ab1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610aba578082015181840152602081019050610a9f565b50505050905090810190601f168015610ae75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b9660048036036060811015610b0b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b5257600080fd5b820183602082011115610b6457600080fd5b80359060200191846001830284011164010000000083111715610b8657600080fd5b9091929391929390505050611bd7565b005b610bc460048036036020811015610bae57600080fd5b8101908080359060200190929190505050611d2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c6860048036036040811015610c1c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d62565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060168054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d815780601f10610d5657610100808354040283529160200191610d81565b820191906000526020600020905b815481529060010190602001808311610d6457829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610dfd57600080fd5b600f600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b806000600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610f325750601160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610f3d57600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610fad57600080fd5b6000600e600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415151561102057600080fd5b85600f600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000601280549050905090565b806000600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806111b357503373ffffffffffffffffffffffffffffffffffffffff16600f600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806112445750601160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b151561124f57600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156112bf57600080fd5b6000600e600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561133157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415151561136d57600080fd5b6113778686611df6565b50505050505050565b600061138b33611eab565b151561139657600080fd5b60078260ff161015156113a857600080fd5b8260078360ff166007811015156113bb57fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b6000601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508210151561145657600080fd5b601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156114a257fe5b9060005260206000200154905092915050565b6002816005811015156114c457fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561154657600080fd5b601960149054906101000a900460ff16151561156157600080fd5b6000601960146101000a81548160ff021916908315150217905550565b600060028260058110151561158f57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6115d483838360206040519081016040528060008152506120fd565b505050565b600115156115e6336125b4565b151514151561165d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6e656974686572206d696e6572206e6f72206d616e616765720000000000000081525060200191505060405180910390fd5b611666816125e7565b50565b600060078260078110151561167a57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000601280549050821015156116b857600080fd5b6012828154811015156116c757fe5b90600052602060002001549050919050565b601960149054906101000a900460ff1681565b6000600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561176057600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156117a257600080fd5b6117ab82612644565b9050919050565b6117bb33611eab565b15156117c657600080fd5b601960149054906101000a900460ff161515156117e257600080fd5b6001601960146101000a81548160ff021916908315150217905550565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060178054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118bd5780601f10611892576101008083540402835291602001916118bd565b820191906000526020600020905b8154815290600101906020018083116118a057829003601f168201915b5050505050905090565b80601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611a1885858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506120fd565b5050505050565b6000611a2a33611eab565b1515611a3557600080fd5b60038260ff161480611a4a575060048260ff16145b1515611a5557600080fd5b8260028360ff16600581101515611a6857fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b606081600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611b2357600080fd5b601860008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bca5780601f10611b9f57610100808354040283529160200191611bca565b820191906000526020600020905b815481529060010190602001808311611bad57829003601f168201915b5050505050915050919050565b60011515611be433612690565b15151480611c3f5750601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611cb3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206d696e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b601960149054906101000a900460ff16151515611ccf57600080fd5b611cd984846129b1565b611d278383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612a0a565b50505050565b600781600781101515611d3c57fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611e3782612aa7565b611e418183612b4a565b611e4b8383612d81565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611eea57600090506120f8565b60026000600581101515611efa57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480611fb1575060026001600581101515611f6057fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806120175750600280600581101515611fc657fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061207e57506002600360058110151561202d57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806120e557506002600460058110151561209457fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b156120f357600190506120f8565b600090505b919050565b816000600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806121ce57503373ffffffffffffffffffffffffffffffffffffffff16600f600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8061225f5750601160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b151561226a57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156122da57600080fd5b6000600e600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561234c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415151561238857600080fd5b6123928787611df6565b6123b18773ffffffffffffffffffffffffffffffffffffffff16612ecd565b156125aa5760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156124ad578082015181840152602081019050612492565b50505050905090810190601f1680156124da5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156124fc57600080fd5b505af1158015612510573d6000803e3d6000fd5b505050506040513d602081101561252657600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415156125a857600080fd5b505b5050505050505050565b60006125bf82612690565b806125cf57506125ce82611eab565b5b156125dd57600190506125e2565b600090505b919050565b6125f081612ee0565b6000601860008381526020019081526020016000208054600181600116156101000203166002900490501415156126415760186000828152602001908152602001600020600061264091906131c7565b5b50565b6000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156126cf57600090506129ac565b600760006007811015156126df57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061279657506007600160078110151561274557fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806127fd5750600760026007811015156127ac57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061286457506007600360078110151561281357fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806128cb57506007600460078110151561287a57fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806129325750600760056007811015156128e157fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061299957506007600660078110151561294857fe5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b156129a757600190506129ac565b600090505b919050565b6129bb8282612f97565b6000601282908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036013600084815260200190815260200160002081905550505050565b81600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612a7a57600080fd5b81601860008581526020019081526020016000209080519060200190612aa192919061320f565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff16600f600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612b4757600f600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612bb757600080fd5b600e600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006015600083815260200190815260200160002054905060006001601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390508181141515612d28576000601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515612ca657fe5b9060005260206000200154905080601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515612d0057fe5b9060005260206000200181905550826015600083815260200190815260200160002081905550505b601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612d7a919061328f565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612def57600080fd5b81600e600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505090600182039060005260206000200160009091929091909150559050600181036015600084815260200190815260200160002081905550505050565b600080823b905060008111915050919050565b612ee9816130ab565b600060136000838152602001908152602001600020549050600060016012805490500390506000601282815481101515612f1f57fe5b9060005260206000200154905080601284815481101515612f3c57fe5b90600052602060002001819055506012805480919060019003612f5f919061328f565b508260136000838152602001908152602001600020819055506000601360008681526020019081526020016000208190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612fd357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561304157600080fd5b61304b8282612d81565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b80600073ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561311b57600080fd5b6000600e600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061315c83612aa7565b6131668184612b4a565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b50805460018160011615610100020316600290046000825580601f106131ed575061320c565b601f01602090049060005260206000209081019061320b91906132bb565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061325057805160ff191683800117855561327e565b8280016001018555821561327e579182015b8281111561327d578251825591602001919060010190613262565b5b50905061328b91906132bb565b5090565b8154818355818111156132b6578183600052602060002091820191016132b591906132bb565b5b505050565b6132dd91905b808211156132d95760008160009055506001016132c1565b5090565b9056fea165627a7a72305820ce862524bd888d6625427d9aeca49064441c0a072d4b3faa5764afabba5c30fa0029",
  "sourceMap": "189:1651:16:-;;;591:5;570:26;;;;;;;;;;;;;;;;;;;;603:114;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:114:16;455:4:15;421:19;:31;441:10;421:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;310:252:23;;;;;;;;;323:42;310:252;;;;;;;;388:42;310:252;;;;;;;;453:42;310:252;;;;;;;;526:1;310:252;;;;;;;;559:1;310:252;;;;;;;:8;:252;;;;;;;:::i;:::-;;633:93;;;;;;;;;651:1;633:93;;;;;;;;663:1;633:93;;;;;;;;675:1;633:93;;;;;;;;687:1;633:93;;;;;;;;699:1;633:93;;;;;;;;711:1;633:93;;;;;;;;723:1;633:93;;;;;;;:6;:93;;;;;;;:::i;:::-;;3967:4:12;3933:19;:31;3953:10;3933:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;817:4:10;783:19;:31;803:10;783:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:11;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;634:20:16;;;;;;;;;;;;;;;;;;:7;:20;;;;;;;;;;;;:::i;:::-;;664:18;;;;;;;;;;;;;;;;;;:9;:18;;;;;;;;;;;;:::i;:::-;;700:10;692:5;;:18;;;;;;;;;;;;;;;;;;189:1651;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "189:1651:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;189:1651:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:150:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;677:150:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;864:100:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;864:100:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8904:160:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8904:160:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6866:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6866:315:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;951:100:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6154:300:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6154:300:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1944:320:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1944:320:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1575:212:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1575:212:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;171:26:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;171:26:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1679:157:16;;;:::i;:::-;;2630:103:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2630:103:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5431:157:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5431:157:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1463:94:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1463:94:16;;;;;;;;;;;;;;;;;:::i;:::-;;2524:100:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2524:100:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1185:161:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1185:161:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;570:26:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8497:170:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8497:170:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8079:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8079:167:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1591:82:16;;;:::i;:::-;;544:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1067:108:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1067:108:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7583:210:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7583:210:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4846:186;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4846:186:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4846:186:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4846:186:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4846:186:12;;;;;;;;;;;;:::i;:::-;;2270:248:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2270:248:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1321:158:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1321:158:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1321:158:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:188:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1269:188:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1269:188:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1269:188:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1269:188:16;;;;;;;;;;;;:::i;:::-;;203:24:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;203:24:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9325:169:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9325:169:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;677:150:15;768:4;789:19;:33;809:12;789:33;;;;;;;;;;;;;;;;;;;;;;;;;;;782:40;;677:150;;;:::o;864:100:11:-;915:19;952:7;944:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:100;:::o;8904:160:12:-;9013:7;8990:8;3837:1;3806:33;;:9;:19;3816:8;3806:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3798:42;;;;;;;;9037:12;:22;9050:8;9037:22;;;;;;;;;;;;;;;;;;;;;9030:29;;8904:160;;;;:::o;6866:315::-;6960:8;3102:18;3123:9;:19;3133:8;3123:19;;;;;;;;;;;;;;;;;;;;;3102:40;;3170:10;3156:24;;:10;:24;;;:68;;;;3184:16;:28;3201:10;3184:28;;;;;;;;;;;;;;;:40;3213:10;3184:40;;;;;;;;;;;;;;;;;;;;;;;;;3156:68;3148:77;;;;;;;;6987:8;3837:1;3806:33;;:9;:19;3816:8;3806:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3798:42;;;;;;;;7005:18;7026:9;:19;7036:8;7026:19;;;;;;;;;;;;;;;;;;;;;7005:40;;7072:10;7059:23;;:9;:23;;;;7051:32;;;;;;;;7115:9;7090:12;:22;7103:8;7090:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;7167:8;7156:9;7135:41;;7144:10;7135:41;;;;;;;;;;;;3846:1;3231;6866:315;;;;:::o;951:100:10:-;1009:7;1033:6;:13;;;;1026:20;;951:100;:::o;6154:300:12:-;6267:8;3426:18;3447:9;:19;3457:8;3447:19;;;;;;;;;;;;;;;;;;;;;3426:40;;3501:10;3487:24;;:10;:24;;;:70;;;;3547:10;3521:36;;:12;:22;3534:8;3521:22;;;;;;;;;;;;;;;;;;;;;:36;;;3487:70;:120;;;;3567:16;:28;3584:10;3567:28;;;;;;;;;;;;;;;:40;3596:10;3567:40;;;;;;;;;;;;;;;;;;;;;;;;;3487:120;3472:141;;;;;;;;6294:8;3837:1;3806:33;;:9;:19;3816:8;3806:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3798:42;;;;;;;;6312:18;6333:9;:19;6343:8;6333:19;;;;;;;;;;;;;;;;;;;;;6312:40;;6380:5;6366:19;;:10;:19;;;6358:28;;;;;;;;6415:1;6400:17;;:3;:17;;;;6392:26;;;;;;;;6425:24;6435:3;6440:8;6425:9;:24::i;:::-;3846:1;3619;6154:300;;;;;:::o;1944:320:23:-;2029:4;863:21;873:10;863:9;:21::i;:::-;855:30;;;;;;;;2060:1;2053:4;:8;;;2045:17;;;;;;;;2222:14;2207:6;2214:4;2207:12;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2253:4;2246:11;;1944:320;;;;:::o;1575:212:10:-;1683:7;1717:10;:18;1728:6;1717:18;;;;;;;;;;;;;;;:25;;;;1708:6;:34;1700:43;;;;;;;;1756:10;:18;1767:6;1756:18;;;;;;;;;;;;;;;1775:6;1756:26;;;;;;;;;;;;;;;;;;1749:33;;1575:212;;;;:::o;171:26:23:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1679:157:16:-;792:5:23;;;;;;;;;;;778:19;;:10;:19;;;770:28;;;;;;;;964:6:16;;;;;;;;;;;956:15;;;;;;;;1824:5;1815:6;;:14;;;;;;;;;;;;;;;;;;1679:157::o;2630:103:23:-;2686:7;2712:8;2721:4;2712:14;;;;;;;;;;;;;;;;;;;;2705:21;;2630:103;;;:::o;5431:157:12:-;5540:43;5558:5;5565:3;5570:8;5540:43;;;;;;;;;;;;;:17;:43::i;:::-;5431:157;;;:::o;1463:94:16:-;1211:4;1173:42;;:34;1196:10;1173:22;:34::i;:::-;:42;;;1165:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1529:21;1541:8;1529:11;:21::i;:::-;1463:94;:::o;2524:100:23:-;2579:7;2605:6;2612:4;2605:12;;;;;;;;;;;;;;;;;;;;2598:19;;2524:100;;;:::o;1185:161:10:-;1266:7;1300:6;:13;;;;1291:6;:22;1283:31;;;;;;;;1327:6;1334;1327:14;;;;;;;;;;;;;;;;;;1320:21;;1185:161;;;:::o;570:26:16:-;;;;;;;;;;;;;:::o;8497:170:12:-;8575:14;8608:9;:19;8618:8;8608:19;;;;;;;;;;;;;;;;;;;;;8599:28;;8659:1;8641:20;;:6;:20;;;;8633:29;;;;;;;;8497:170;;;:::o;8079:167::-;8157:7;8200:1;8182:20;;:6;:20;;;;8174:29;;;;;;;;8216:25;8234:6;8216:17;:25::i;:::-;8209:32;;8079:167;;;:::o;1591:82:16:-;863:21:23;873:10;863:9;:21::i;:::-;855:30;;;;;;;;895:6:16;;;;;;;;;;;894:7;886:16;;;;;;;;1662:4;1653:6;;:13;;;;;;;;;;;;;;;;;;1591:82::o;544:20::-;;;;;;;;;;;;;:::o;1067:108:11:-;1120:21;1161:9;1151:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:108;:::o;7583:210:12:-;7720:9;7678:16;:28;7695:10;7678:28;;;;;;;;;;;;;;;:39;7707:9;7678:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;7767:9;7740:48;;7755:10;7740:48;;;7778:9;7740:48;;;;;;;;;;;;;;;;;;;;;;7583:210;;:::o;4846:186::-;4981:46;4999:5;5006:3;5011:8;5021:5;;4981:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4981:46:12;;;;;;:17;:46::i;:::-;4846:186;;;;;:::o;2270:248:23:-;2350:4;863:21;873:10;863:9;:21::i;:::-;855:30;;;;;;;;2382:1;2374:4;:9;;;:22;;;;2395:1;2387:4;:9;;;2374:22;2366:31;;;;;;;;2482:8;2465;2474:4;2465:14;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2507:4;2500:11;;2270:248;;;;:::o;1321:158:11:-;1427:13;1404:8;3837:1:12;3806:33;;:9;:19;3816:8;3806:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3798:42;;;;;;;;1457:7:11;:17;1465:8;1457:17;;;;;;;;;;;1450:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:158;;;;:::o;1269:188:16:-;1064:4;1035:33;;:25;1049:10;1035:13;:25::i;:::-;:33;;;:56;;;;1086:5;;;;;;;;;;;1072:19;;:10;:19;;;1035:56;1027:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:6;;;;;;;;;;;894:7;886:16;;;;;;;;1380:26;1392:3;1397:8;1380:11;:26::i;:::-;1416:34;1435:8;1445:4;;1416:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1416:34:16;;;;;;:18;:34::i;:::-;1269:188;;;;:::o;203:24:23:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9325:169:12:-;9433:4;9454:16;:24;9471:6;9454:24;;;;;;;;;;;;;;;:35;9479:9;9454:35;;;;;;;;;;;;;;;;;;;;;;;;;9447:42;;9325:169;;;;:::o;9677:262::-;9760:12;9775:9;:19;9785:8;9775:19;;;;;;;;;;;;;;;;;;;;;9760:34;;9800:24;9815:8;9800:14;:24::i;:::-;9831:30;9846:4;9852:8;9831:14;:30::i;:::-;9867:26;9879:3;9884:8;9867:11;:26::i;:::-;9925:8;9920:3;9905:29;;9914:4;9905:29;;;;;;;;;;;;9677:262;;;:::o;909:394:23:-;966:4;1003:1;986:19;;:5;:19;;;982:315;;;1055:5;1048:12;;;;982:315;1090:8;1099:1;1090:11;;;;;;;;;;;;;;;;;;;;1081:20;;:5;:20;;;:44;;;;1114:8;1123:1;1114:11;;;;;;;;;;;;;;;;;;;;1105:20;;:5;:20;;;1081:44;:68;;;;1138:8;1147:1;1138:11;;;;;;;;;;;;;;;;;;;;1129:20;;:5;:20;;;1081:68;:111;;;;1181:8;1190:1;1181:11;;;;;;;;;;;;;;;;;;;;1172:20;;:5;:20;;;1081:111;:135;;;;1205:8;1214:1;1205:11;;;;;;;;;;;;;;;;;;;;1196:20;;:5;:20;;;1081:135;1077:220;;;1239:4;1232:11;;;;1077:220;1281:5;1274:12;;909:394;;;;:::o;12894:520:12:-;13035:8;3426:18;3447:9;:19;3457:8;3447:19;;;;;;;;;;;;;;;;;;;;;3426:40;;3501:10;3487:24;;:10;:24;;;:70;;;;3547:10;3521:36;;:12;:22;3534:8;3521:22;;;;;;;;;;;;;;;;;;;;;:36;;;3487:70;:120;;;;3567:16;:28;3584:10;3567:28;;;;;;;;;;;;;;;:40;3596:10;3567:40;;;;;;;;;;;;;;;;;;;;;;;;;3487:120;3472:141;;;;;;;;13062:8;3837:1;3806:33;;:9;:19;3816:8;3806:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3798:42;;;;;;;;13080:18;13101:9;:19;13111:8;13101:19;;;;;;;;;;;;;;;;;;;;;13080:40;;13148:5;13134:19;;:10;:19;;;13126:28;;;;;;;;13183:1;13168:17;;:3;:17;;;;13160:26;;;;;;;;13193:24;13203:3;13208:8;13193:9;:24::i;:::-;13228:16;:3;:14;;;:16::i;:::-;13224:186;;;13259:13;13295:3;13275:41;;;13317:10;13329:5;13336:8;13346:5;13275:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13275:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13275:77:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13275:77:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13275:77:12;;;;;;;;;;;;;;;;13259:93;;651:10;13378:24;;13368:34;;;:6;:34;;;;13360:43;;;;;;;;13224:186;;3846:1;3619;12894:520;;;;;;:::o;1733:205:23:-;1797:4;1817:14;1825:5;1817:7;:14::i;:::-;:34;;;;1835:16;1845:5;1835:9;:16::i;:::-;1817:34;1813:119;;;1874:4;1867:11;;;;1813:119;1916:5;1909:12;;1733:205;;;;:::o;1872:179:11:-;1934:21;1946:8;1934:11;:21::i;:::-;2001:1;1972:7;:17;1980:8;1972:17;;;;;;;;;;;1966:31;;;;;;;;;;;;;;;;:36;;1962:85;;;2023:7;:17;2031:8;2023:17;;;;;;;;;;;;2016:24;;;;:::i;:::-;1962:85;1872:179;:::o;4837:140:10:-;4923:7;4947:10;:18;4958:6;4947:18;;;;;;;;;;;;;;;:25;;;;4940:32;;4837:140;;;:::o;1309:418:23:-;1364:4;1401:1;1384:19;;:5;:19;;;1380:341;;;1427:5;1420:12;;;;1380:341;1462:6;1469:1;1462:9;;;;;;;;;;;;;;;;;;;;1453:18;;:5;:18;;;:40;;;;1484:6;1491:1;1484:9;;;;;;;;;;;;;;;;;;;;1475:18;;:5;:18;;;1453:40;:62;;;;1506:6;1513:1;1506:9;;;;;;;;;;;;;;;;;;;;1497:18;;:5;:18;;;1453:62;:103;;;;1547:6;1554:1;1547:9;;;;;;;;;;;;;;;;;;;;1538:18;;:5;:18;;;1453:103;:125;;;;1569:6;1576:1;1569:9;;;;;;;;;;;;;;;;;;;;1560:18;;:5;:18;;;1453:125;:147;;;;1591:6;1598:1;1591:9;;;;;;;;;;;;;;;;;;;;1582:18;;:5;:18;;;1453:147;:188;;;;1632:6;1639:1;1632:9;;;;;;;;;;;;;;;;;;;;1623:18;;:5;:18;;;1453:188;1449:272;;;1663:4;1656:11;;;;1449:272;1705:5;1698:12;;1309:418;;;;:::o;2168:192:10:-;2247:26;2259:3;2264:8;2247:11;:26::i;:::-;2279:14;2296:6;2308:8;2296:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2296:21:10;;;;;;;;;;;;;;;;;;;;;2279:38;;2354:1;2345:6;:10;2323:9;:19;2333:8;2323:19;;;;;;;;;;;:32;;;;2168:192;;;:::o;2436:149:11:-;2538:8;3837:1:12;3806:33;;:9;:19;3816:8;3806:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3798:42;;;;;;;;2576:4:11;2556:7;:17;2564:8;2556:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;2436:149;;;:::o;13542:164:12:-;13650:1;13616:36;;:12;:22;13629:8;13616:22;;;;;;;;;;;;;;;;;;;;;:36;;;;13612:90;;;13673:12;:22;13686:8;13673:22;;;;;;;;;;;;13666:29;;;;;;;;;;;13612:90;13542:164;:::o;3479:547:10:-;3600:5;3577:28;;:9;:19;3587:8;3577:19;;;;;;;;;;;;;;;;;;;;;:28;;;3569:37;;;;;;;;3619:9;:19;3629:8;3619:19;;;;;;;;;;;;3612:26;;;;;;;;;;;3645;3674:14;:24;3689:8;3674:24;;;;;;;;;;;;3645:53;;3704:22;3756:1;3729:10;:17;3740:5;3729:17;;;;;;;;;;;;;;;:24;;;;:28;3704:53;;3786:18;3768:14;:36;;3764:225;;;3818:17;3838:10;:17;3849:5;3838:17;;;;;;;;;;;;;;;3856:14;3838:33;;;;;;;;;;;;;;;;;;3818:53;;3919:9;3879:10;:17;3890:5;3879:17;;;;;;;;;;;;;;;3897:18;3879:37;;;;;;;;;;;;;;;;;:49;;;;3964:18;3936:14;:25;3951:9;3936:25;;;;;;;;;;;:46;;;;3764:225;;3995:10;:17;4006:5;3995:17;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;3479:547;;;;:::o;4290:260::-;4414:1;4383:33;;:9;:19;4393:8;4383:19;;;;;;;;;;;;;;;;;;;;;:33;;;4375:42;;;;;;;;4445:3;4423:9;:19;4433:8;4423:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4455:14;4472:10;:15;4483:3;4472:15;;;;;;;;;;;;;;;4493:8;4472:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4472:30:10;;;;;;;;;;;;;;;;;;;;;4455:47;;4544:1;4535:6;:10;4508:14;:24;4523:8;4508:24;;;;;;;;;;;:37;;;;4290:260;;;:::o;280:596:13:-;358:17;385:12;811:5;799:18;791:26;;870:1;863:4;:8;848:23;;280:596;;;;:::o;2753:455:10:-;2815:21;2827:8;2815:11;:21::i;:::-;2843:18;2864:9;:19;2874:8;2864:19;;;;;;;;;;;;2843:40;;2889:22;2930:1;2914:6;:13;;;;:17;2889:42;;2937:17;2957:6;2964:14;2957:22;;;;;;;;;;;;;;;;;;2937:42;;3007:9;2986:6;2993:10;2986:18;;;;;;;;;;;;;;;;;:30;;;;3023:6;:15;;;;;;;;;;;;:::i;:::-;;3164:10;3141:9;:20;3151:9;3141:20;;;;;;;;;;;:33;;;;3202:1;3180:9;:19;3190:8;3180:19;;;;;;;;;;;:23;;;;2753:455;;;;:::o;10323:238:12:-;10425:1;10410:17;;:3;:17;;;;10402:26;;;;;;;;10473:1;10442:33;;:9;:19;10452:8;10442:19;;;;;;;;;;;;;;;;;;;;;:33;;;10434:42;;;;;;;;10483:26;10495:3;10500:8;10483:11;:26::i;:::-;10547:8;10542:3;10521:35;;10538:1;10521:35;;;;;;;;;;;;10323:238;;:::o;10954:259::-;11025:8;3837:1;3806:33;;:9;:19;3816:8;3806:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3798:42;;;;;;;;11043:18;11064:9;:19;11074:8;11064:19;;;;;;;;;;;;;;;;;;;;;11043:40;;11089:24;11104:8;11089:14;:24::i;:::-;11119:36;11134:10;11146:8;11119:14;:36::i;:::-;11199:8;11195:1;11166:42;;11175:10;11166:42;;;;;;;;;;;;3846:1;10954:259;;:::o;189:1651:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n// ERC721 adapted from https://github.com/0xcert/ethereum-erc721\nimport \"./ERC721/tokens/nf-token-enumerable.sol\";\nimport \"./ERC721/tokens/nf-token-metadata.sol\";\n\n\ncontract Elemmire is NFTokenEnumerable, NFTokenMetadata {\n    // features to be implemented:\n    // * finer access control other than \"managerOnly\" / \"miningOnly\"\n    // * upgradable\n    // * able or easy to integrate with the \"Trade\" contract + state channels\n\n    // for now, only 5 managers and 5 minable/burnable contracts (see accessControl.sol)\n    address public owner;\n    bool public paused = false;\n\n    constructor() public {\n        nftName = \"Elemmire\";\n        nftSymbol = \"ELEM\";\n        owner = msg.sender;\n    }\n\n    // modifier ownerOnly() {  // defined in accessControl.sol\n    //     require(msg.sender == owner);\n    //     _;\n    // }\n\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    modifier whenPaused {\n        require(paused);\n        _;\n    }\n\n    modifier miningOnly() {\n        require(super.isMiner(msg.sender) == true || msg.sender == owner, \"not miner\");\n        _;\n    }\n\n    modifier minerOrManager() {\n        require(super.isMinerOrManager(msg.sender) == true, \"neither miner nor manager\");\n        _;\n    }\n\n    function mint(address _to, uint256 _tokenId, string calldata _uri) external miningOnly whenNotPaused {\n        super._mint(_to, _tokenId);\n        super._setTokenUri(_tokenId, _uri);\n    }\n\n    function burn(uint256 _tokenId) external minerOrManager {\n        super._burn(_tokenId);\n    }\n\n    // additional functions\n    function pause() external managerOnly whenNotPaused {\n        paused = true;\n    }\n\n    function unpause() public ownerOnly whenPaused {\n        // set to ownerOnly in case accounts of other managers are compromised\n        paused = false;\n    }\n\n\n}\n",
  "sourcePath": "/home/kai/Work/project/OptractContract/contracts/Elemmire.sol",
  "ast": {
    "absolutePath": "/home/kai/Work/project/OptractContract/contracts/Elemmire.sol",
    "exportedSymbols": {
      "Elemmire": [
        2534
      ]
    },
    "id": 2535,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2387,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "/home/kai/Work/project/OptractContract/contracts/ERC721/tokens/nf-token-enumerable.sol",
        "file": "./ERC721/tokens/nf-token-enumerable.sol",
        "id": 2388,
        "nodeType": "ImportDirective",
        "scope": 2535,
        "sourceUnit": 1584,
        "src": "89:49:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kai/Work/project/OptractContract/contracts/ERC721/tokens/nf-token-metadata.sol",
        "file": "./ERC721/tokens/nf-token-metadata.sol",
        "id": 2389,
        "nodeType": "ImportDirective",
        "scope": 2535,
        "sourceUnit": 1690,
        "src": "139:47:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2390,
              "name": "NFTokenEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1583,
              "src": "210:17:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenEnumerable_$1583",
                "typeString": "contract NFTokenEnumerable"
              }
            },
            "id": 2391,
            "nodeType": "InheritanceSpecifier",
            "src": "210:17:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2392,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1689,
              "src": "229:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$1689",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 2393,
            "nodeType": "InheritanceSpecifier",
            "src": "229:15:16"
          }
        ],
        "contractDependencies": [
          1152,
          1172,
          1288,
          1583,
          1689,
          2322,
          2353,
          2385,
          6152
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2534,
        "linearizedBaseContracts": [
          2534,
          1689,
          1172,
          1583,
          1152,
          2322,
          6152,
          2385,
          2353,
          1288
        ],
        "name": "Elemmire",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2395,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 2534,
            "src": "544:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2394,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2398,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 2534,
            "src": "570:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2396,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "570:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 2397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "591:5:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "624:93:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2401,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1593,
                      "src": "634:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "456c656d6d697265",
                      "id": 2402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "644:10:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6b5c324778d402972dcabd1aa3df1b758872e35871a78c23060ee0078c5faa2c",
                        "typeString": "literal_string \"Elemmire\""
                      },
                      "value": "Elemmire"
                    },
                    "src": "634:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "634:20:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2405,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "664:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "454c454d",
                      "id": 2406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "676:6:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a698fcb5c130820563283f94bc40ce33aba25115e9ccbd9500c46a3df1cf57d0",
                        "typeString": "literal_string \"ELEM\""
                      },
                      "value": "ELEM"
                    },
                    "src": "664:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2408,
                  "nodeType": "ExpressionStatement",
                  "src": "664:18:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2409,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2395,
                      "src": "692:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2410,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6167,
                        "src": "700:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "700:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "692:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "692:18:16"
                }
              ]
            },
            "documentation": null,
            "id": 2415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:2:16"
            },
            "returnParameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:0:16"
            },
            "scope": 2534,
            "src": "603:114:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2423,
              "nodeType": "Block",
              "src": "876:44:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "894:7:16",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2418,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2398,
                          "src": "895:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6170,
                      "src": "886:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "886:16:16"
                },
                {
                  "id": 2422,
                  "nodeType": "PlaceholderStatement",
                  "src": "912:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2424,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "873:2:16"
            },
            "src": "851:69:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2431,
              "nodeType": "Block",
              "src": "946:43:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2427,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2398,
                        "src": "964:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6170,
                      "src": "956:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "956:15:16"
                },
                {
                  "id": 2430,
                  "nodeType": "PlaceholderStatement",
                  "src": "981:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2432,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:16"
            },
            "src": "926:63:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2451,
              "nodeType": "Block",
              "src": "1017:106:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2437,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6167,
                                  "src": "1049:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1049:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2435,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6217,
                                "src": "1035:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_Elemmire_$2534",
                                  "typeString": "contract super Elemmire"
                                }
                              },
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isMiner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6049,
                              "src": "1035:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1035:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 2440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1064:4:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1035:33:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2442,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6167,
                              "src": "1072:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1072:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2444,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "1086:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1072:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1035:56:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74206d696e6572",
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1093:11:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc7027206f7d194c28d78fa43b6af322c0f5093e7482088b25cb52d0a5249e8e",
                          "typeString": "literal_string \"not miner\""
                        },
                        "value": "not miner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc7027206f7d194c28d78fa43b6af322c0f5093e7482088b25cb52d0a5249e8e",
                          "typeString": "literal_string \"not miner\""
                        }
                      ],
                      "id": 2434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6171,
                      "src": "1027:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:78:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2449,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:78:16"
                },
                {
                  "id": 2450,
                  "nodeType": "PlaceholderStatement",
                  "src": "1115:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2452,
            "name": "miningOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:2:16"
            },
            "src": "995:128:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "1155:108:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2457,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6167,
                                "src": "1196:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1196:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2455,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6217,
                              "src": "1173:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_Elemmire_$2534",
                                "typeString": "contract super Elemmire"
                              }
                            },
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isMinerOrManager",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6071,
                            "src": "1173:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1173:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1211:4:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1173:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e656974686572206d696e6572206e6f72206d616e61676572",
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1217:27:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0569783b8fdc05348ffb0885ca0af83f5db11a14dfa3454a9b2b01933001183f",
                          "typeString": "literal_string \"neither miner nor manager\""
                        },
                        "value": "neither miner nor manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0569783b8fdc05348ffb0885ca0af83f5db11a14dfa3454a9b2b01933001183f",
                          "typeString": "literal_string \"neither miner nor manager\""
                        }
                      ],
                      "id": 2454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6171,
                      "src": "1165:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:80:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:80:16"
                },
                {
                  "id": 2465,
                  "nodeType": "PlaceholderStatement",
                  "src": "1255:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2467,
            "name": "minerOrManager",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:2:16"
            },
            "src": "1129:134:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2494,
              "nodeType": "Block",
              "src": "1370:87:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2483,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2469,
                        "src": "1392:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2484,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2471,
                        "src": "1397:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2480,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6217,
                        "src": "1380:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Elemmire_$2534",
                          "typeString": "contract super Elemmire"
                        }
                      },
                      "id": 2482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1405,
                      "src": "1380:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:26:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2490,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2471,
                        "src": "1435:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2491,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2473,
                        "src": "1445:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2487,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6217,
                        "src": "1416:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Elemmire_$2534",
                          "typeString": "contract super Elemmire"
                        }
                      },
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1688,
                      "src": "1416:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2493,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:34:16"
                }
              ]
            },
            "documentation": null,
            "id": 2495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2476,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2475,
                  "name": "miningOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2452,
                  "src": "1345:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1345:10:16"
              },
              {
                "arguments": null,
                "id": 2478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2477,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2424,
                  "src": "1356:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1356:13:16"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2469,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "1283:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2471,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "1296:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2473,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "1314:20:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1282:53:16"
            },
            "returnParameters": {
              "id": 2479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:16"
            },
            "scope": 2534,
            "src": "1269:188:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "1519:38:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2505,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "1541:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2502,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6217,
                        "src": "1529:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Elemmire_$2534",
                          "typeString": "contract super Elemmire"
                        }
                      },
                      "id": 2504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1671,
                      "src": "1529:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2507,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:21:16"
                }
              ]
            },
            "documentation": null,
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2500,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2499,
                  "name": "minerOrManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2467,
                  "src": "1504:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1504:14:16"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2497,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "1477:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1476:18:16"
            },
            "returnParameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1519:0:16"
            },
            "scope": 2534,
            "src": "1463:94:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2520,
              "nodeType": "Block",
              "src": "1643:30:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2516,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2398,
                      "src": "1653:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1662:4:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1653:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:13:16"
                }
              ]
            },
            "documentation": null,
            "id": 2521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2512,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2511,
                  "name": "managerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5931,
                  "src": "1617:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1617:11:16"
              },
              {
                "arguments": null,
                "id": 2514,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2513,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2424,
                  "src": "1629:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1629:13:16"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:16"
            },
            "returnParameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:0:16"
            },
            "scope": 2534,
            "src": "1591:82:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2532,
              "nodeType": "Block",
              "src": "1726:110:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2528,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2398,
                      "src": "1815:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1824:5:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1815:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2531,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:14:16"
                }
              ]
            },
            "documentation": null,
            "id": 2533,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2524,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2523,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5920,
                  "src": "1705:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1705:9:16"
              },
              {
                "arguments": null,
                "id": 2526,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2525,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2432,
                  "src": "1715:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1715:10:16"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:2:16"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:16"
            },
            "scope": 2534,
            "src": "1679:157:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2535,
        "src": "189:1651:16"
      }
    ],
    "src": "0:1841:16"
  },
  "legacyAST": {
    "absolutePath": "/home/kai/Work/project/OptractContract/contracts/Elemmire.sol",
    "exportedSymbols": {
      "Elemmire": [
        2534
      ]
    },
    "id": 2535,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2387,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "/home/kai/Work/project/OptractContract/contracts/ERC721/tokens/nf-token-enumerable.sol",
        "file": "./ERC721/tokens/nf-token-enumerable.sol",
        "id": 2388,
        "nodeType": "ImportDirective",
        "scope": 2535,
        "sourceUnit": 1584,
        "src": "89:49:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kai/Work/project/OptractContract/contracts/ERC721/tokens/nf-token-metadata.sol",
        "file": "./ERC721/tokens/nf-token-metadata.sol",
        "id": 2389,
        "nodeType": "ImportDirective",
        "scope": 2535,
        "sourceUnit": 1690,
        "src": "139:47:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2390,
              "name": "NFTokenEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1583,
              "src": "210:17:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenEnumerable_$1583",
                "typeString": "contract NFTokenEnumerable"
              }
            },
            "id": 2391,
            "nodeType": "InheritanceSpecifier",
            "src": "210:17:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2392,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1689,
              "src": "229:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$1689",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 2393,
            "nodeType": "InheritanceSpecifier",
            "src": "229:15:16"
          }
        ],
        "contractDependencies": [
          1152,
          1172,
          1288,
          1583,
          1689,
          2322,
          2353,
          2385,
          6152
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2534,
        "linearizedBaseContracts": [
          2534,
          1689,
          1172,
          1583,
          1152,
          2322,
          6152,
          2385,
          2353,
          1288
        ],
        "name": "Elemmire",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2395,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 2534,
            "src": "544:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2394,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2398,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 2534,
            "src": "570:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2396,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "570:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 2397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "591:5:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "624:93:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2401,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1593,
                      "src": "634:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "456c656d6d697265",
                      "id": 2402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "644:10:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6b5c324778d402972dcabd1aa3df1b758872e35871a78c23060ee0078c5faa2c",
                        "typeString": "literal_string \"Elemmire\""
                      },
                      "value": "Elemmire"
                    },
                    "src": "634:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "634:20:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2405,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "664:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "454c454d",
                      "id": 2406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "676:6:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a698fcb5c130820563283f94bc40ce33aba25115e9ccbd9500c46a3df1cf57d0",
                        "typeString": "literal_string \"ELEM\""
                      },
                      "value": "ELEM"
                    },
                    "src": "664:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2408,
                  "nodeType": "ExpressionStatement",
                  "src": "664:18:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2409,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2395,
                      "src": "692:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2410,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6167,
                        "src": "700:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "700:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "692:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "692:18:16"
                }
              ]
            },
            "documentation": null,
            "id": 2415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:2:16"
            },
            "returnParameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:0:16"
            },
            "scope": 2534,
            "src": "603:114:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2423,
              "nodeType": "Block",
              "src": "876:44:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "894:7:16",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2418,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2398,
                          "src": "895:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6170,
                      "src": "886:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "886:16:16"
                },
                {
                  "id": 2422,
                  "nodeType": "PlaceholderStatement",
                  "src": "912:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2424,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "873:2:16"
            },
            "src": "851:69:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2431,
              "nodeType": "Block",
              "src": "946:43:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2427,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2398,
                        "src": "964:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6170,
                      "src": "956:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "956:15:16"
                },
                {
                  "id": 2430,
                  "nodeType": "PlaceholderStatement",
                  "src": "981:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2432,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:16"
            },
            "src": "926:63:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2451,
              "nodeType": "Block",
              "src": "1017:106:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2437,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6167,
                                  "src": "1049:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1049:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2435,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6217,
                                "src": "1035:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_Elemmire_$2534",
                                  "typeString": "contract super Elemmire"
                                }
                              },
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isMiner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6049,
                              "src": "1035:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1035:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 2440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1064:4:16",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1035:33:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2442,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6167,
                              "src": "1072:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1072:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2444,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "1086:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1072:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1035:56:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74206d696e6572",
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1093:11:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc7027206f7d194c28d78fa43b6af322c0f5093e7482088b25cb52d0a5249e8e",
                          "typeString": "literal_string \"not miner\""
                        },
                        "value": "not miner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc7027206f7d194c28d78fa43b6af322c0f5093e7482088b25cb52d0a5249e8e",
                          "typeString": "literal_string \"not miner\""
                        }
                      ],
                      "id": 2434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6171,
                      "src": "1027:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:78:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2449,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:78:16"
                },
                {
                  "id": 2450,
                  "nodeType": "PlaceholderStatement",
                  "src": "1115:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2452,
            "name": "miningOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:2:16"
            },
            "src": "995:128:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "1155:108:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2457,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6167,
                                "src": "1196:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1196:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2455,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6217,
                              "src": "1173:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_Elemmire_$2534",
                                "typeString": "contract super Elemmire"
                              }
                            },
                            "id": 2456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isMinerOrManager",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6071,
                            "src": "1173:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1173:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1211:4:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1173:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e656974686572206d696e6572206e6f72206d616e61676572",
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1217:27:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0569783b8fdc05348ffb0885ca0af83f5db11a14dfa3454a9b2b01933001183f",
                          "typeString": "literal_string \"neither miner nor manager\""
                        },
                        "value": "neither miner nor manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0569783b8fdc05348ffb0885ca0af83f5db11a14dfa3454a9b2b01933001183f",
                          "typeString": "literal_string \"neither miner nor manager\""
                        }
                      ],
                      "id": 2454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6170,
                        6171
                      ],
                      "referencedDeclaration": 6171,
                      "src": "1165:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:80:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:80:16"
                },
                {
                  "id": 2465,
                  "nodeType": "PlaceholderStatement",
                  "src": "1255:1:16"
                }
              ]
            },
            "documentation": null,
            "id": 2467,
            "name": "minerOrManager",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:2:16"
            },
            "src": "1129:134:16",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2494,
              "nodeType": "Block",
              "src": "1370:87:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2483,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2469,
                        "src": "1392:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2484,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2471,
                        "src": "1397:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2480,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6217,
                        "src": "1380:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Elemmire_$2534",
                          "typeString": "contract super Elemmire"
                        }
                      },
                      "id": 2482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1405,
                      "src": "1380:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:26:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2490,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2471,
                        "src": "1435:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2491,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2473,
                        "src": "1445:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2487,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6217,
                        "src": "1416:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Elemmire_$2534",
                          "typeString": "contract super Elemmire"
                        }
                      },
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1688,
                      "src": "1416:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2493,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:34:16"
                }
              ]
            },
            "documentation": null,
            "id": 2495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2476,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2475,
                  "name": "miningOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2452,
                  "src": "1345:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1345:10:16"
              },
              {
                "arguments": null,
                "id": 2478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2477,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2424,
                  "src": "1356:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1356:13:16"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2469,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "1283:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2471,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "1296:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2473,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "1314:20:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1282:53:16"
            },
            "returnParameters": {
              "id": 2479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:16"
            },
            "scope": 2534,
            "src": "1269:188:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "1519:38:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2505,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "1541:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2502,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6217,
                        "src": "1529:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Elemmire_$2534",
                          "typeString": "contract super Elemmire"
                        }
                      },
                      "id": 2504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1671,
                      "src": "1529:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2507,
                  "nodeType": "ExpressionStatement",
                  "src": "1529:21:16"
                }
              ]
            },
            "documentation": null,
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2500,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2499,
                  "name": "minerOrManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2467,
                  "src": "1504:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1504:14:16"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2497,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "1477:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1476:18:16"
            },
            "returnParameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1519:0:16"
            },
            "scope": 2534,
            "src": "1463:94:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2520,
              "nodeType": "Block",
              "src": "1643:30:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2516,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2398,
                      "src": "1653:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1662:4:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1653:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:13:16"
                }
              ]
            },
            "documentation": null,
            "id": 2521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2512,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2511,
                  "name": "managerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5931,
                  "src": "1617:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1617:11:16"
              },
              {
                "arguments": null,
                "id": 2514,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2513,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2424,
                  "src": "1629:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1629:13:16"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:16"
            },
            "returnParameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:0:16"
            },
            "scope": 2534,
            "src": "1591:82:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2532,
              "nodeType": "Block",
              "src": "1726:110:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2528,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2398,
                      "src": "1815:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1824:5:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1815:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2531,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:14:16"
                }
              ]
            },
            "documentation": null,
            "id": 2533,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2524,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2523,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5920,
                  "src": "1705:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1705:9:16"
              },
              {
                "arguments": null,
                "id": 2526,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2525,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2432,
                  "src": "1715:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1715:10:16"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:2:16"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:16"
            },
            "scope": 2534,
            "src": "1679:157:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2535,
        "src": "189:1651:16"
      }
    ],
    "src": "0:1841:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Linux.g++"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xC24F32e5DCa47d3B114D71dcF6B2242845CE07c4",
      "transactionHash": "0x520b90619e1e06f2c57c3e6017e11631eef3cefc09a2005a758d184bd3924e35"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-05-06T08:58:01.888Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "return": "Balance of _owner."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "return": "Address that _tokenId is approved for. "
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "return": "True if approved for all, false otherwise."
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "return": "Representing name. "
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "return": "Address of _tokenId owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "return": "True if _interfaceID is supported, false otherwise."
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "return": "Representing symbol. "
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "return": "Token id."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "return": "Token id."
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "return": "URI of _tokenId."
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "return": "Total supply of NFTs."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}